.TH yFONT 3 2010-Aug "linux" "heatherly custom programming manual"

.SH NAME
yFONT \- fast, clean, aesthetic texture mapped fonts for opengl
.SH SYNOPSIS
.nf
.B #include  <yFONT.h>
.sp
.R  return a string with library versioning information
.BI "yFONT_version  ( " "" " );"
.sp
.R  prepare a font for use
.BI "yFONT_load     ( " "a_name" " );"
.sp
.R  remove a font from memory when finished using
.BI "yFONT_free     ( " "a_ref" " );"
.sp
.R  print a normal string with some formatting control
.BI "yFONT_print    ( " "a_ref" ", " "a_size" ", " "a_align" ", " "a_text" " );"
.sp
.R  print a word-wrapped string with some formatting control
.BI "yFONT_printw   ( " "a_ref" ", " "a_size" ", " "a_align" ", " "a_text" ", " "a_wide" ", " "a_tall" ", " "a_space" " );"
.sp
.R  print an array of unicode characters
.BI "yFONT_printu   ( " "a_ref" ", " "a_size" ", " "a_align" ", " "a_array" ", " "a_max" " );"
.sp
.B link with -L/usr/local/libs -lyFONT or -lyFONT_debug

.SH DESCRIPTION

.B yFONT_version ()
returns a specially formatted version string for the yFONT library to be
used in program log files.

.B yFONT_load ()
reads a specially-formatted texture-mapped font file into texture memory as
well as prepares the a texture atlas.

.B yFONT_free()
clears a previously loaded font file out of both texture and normal memory
after its use is complete.

.B yFONT_print ()
displays text to the current opengl position using three other arguments --
a font, a point size, and an alignment.

.B yFONT_printw ()
builds on the yFONT_print() function and adds a basic word-wrapping ability
within a given bounding box and line spacing.

.B yFONT_printu ()
builds on the yFONT_print() function and adds a basic word-wrapping ability
within a given bounding box and line spacing.

.SH ARGUMENT DEFINITIONS

.I a_ref (char)
is an integer that identifies a texture-mapped font to the library.
this integer is checked for validity before use.

.I a_name (char*)
is a string containing the name of the a texture mapped font file stored in
the local shared font directory.

.I a_size (char)
is the point size relative to that stored in the font file, reasonable and
allowed range is 6 to 99.

.I a_align (char)
is the vertical and horizontal alignment to the current position in opengl.
see "ALIGNMENT" section below.

.I a_text (char*)
is a string containing the text to be printed to the screen.  any characters
not in font file will be left out.

.I a_wide (int)
is an integer indicating the width of the bounding box for the text to word
wrap in.

.I a_tall (int)
is an integer indicating the height of the bounding box for the text to word
wrap in.

.I a_spacing (float)
is the line spacing percentage -- 1.0 means normal, < 1.0 mean closer than
normal, > 1.0 means further.

.I a_array (*int[])
is a pointer to an int array filled with unicode characters.  all unused
elements should be nulls.

.I a_max (int)
is an integer indicating how many unicode elements of a_array to access
and print.

.SH ALIGNMENT
before printing, yFONT calculates the width of the resulting text.  it will
then calculate an apporpiate printing position using the alighment given in
the a_align argument.

there are four vertical alignments...
   BOT  : very bottom of lowest possible decender, such as a 'g'
   BAS  : baseline of letters, such as the bottom of an 'a'
   MID  : vertical middle of letters, such as 'a' and 'c'
   TOP  : very top ot the highest ascender, such as an 'l' or 'h'

and there are three horizontal alignments...
   LEF  : placed so the start of the text is at the current position
   CEN  : placed so the center of the text is at the current position
   RIG  : placed so the end of the text is at the current position

all alignments are combinations of vertical and horizontal.  constants are
included in the yFONT.h header with names such as...
.RS 3
.B YF_BASLEF,
.R which means baseline and left-aligned
.RE
.RS 3
.B YF_MIDCEN,
.R which means centered in both directions
.RE
.RS 3
.B YF_TOPRIG,
.R which means the top is and text ends at origin
.RE

.SH RETURN VALUE

.I rc (yFONT_load)
should later be used as a_ref, an char integer that identifies a texture-mapped
font to the library.

.I rc (yFONT_print, yFONT_printw, yFONT_printu)
returns the width of the text printed.  if there was an error, it will return
a negative value.

.I rc (all others)
is a simple return code that provides basic feedback.  zero is normal,
negative is a serious error.

.SH DEBUGGING
yFONT integrates with yURG for urgent processing.  yFONT_make and yFONT_show
are normal programs and process all urgents.  the yFONT library has specific
urgents (yfont and YFONT) that display interal workings.

.SH EXAMPLE

#include  <yFONT.h>

/*---(globals)----------------------*/
.nf
char  *face_sm  = "verdana_sm";
char   txf_sm;

/*---(load font)--------------------*/
txf_sm = yFONT_load (face_sm);
if (txf_sm <  0) {
   fprintf (stderr, "Problem loading %s\\n", face_sm);
   exit    (1);
}

((opengl code to setup and draw))

/*---(show text)--------------------*/
glPushMatrix    (); {
   glColor4f    (0.0, 0.0, 0.0, 1.0);
   glTranslatef (   0.0, -290.0,  40.0);
   yFONT_print  (txf_sm, 8, YF_BASCEN, "testing");
} glPopMatrix   ();

((opengl code flush and swap))

/*---(free font)--------------------*/
yFONT_free (txf_sm);

.SH FILES

.I /usr/local/share/fonts/
.RS 3
this directory is where texture-mapped fonts should be stored and hence where
the library expects to find them
.RE

.I <name>.txf
.RS 3
this is the naming convension of our standard texture-mapped font file and
therefore makes it easy to identify
.RE

.SH BUGS

the programmer needs to properly set the blend functions for the text to look
right and those settings are different for light or dark text.  crap.  gotta
figure out a way to make this easier in the long run

.SH RESOURCES
will only work on an xwindows and opengl system and is probably not worth
using without hardware acceleration

.SH AUTHOR
rsheatherly

.SH SEE ALSO
 yFONT (0)       overview, reasoning, and descision process
 yFONT (3)       library usage and interface
 yFONT (7)       file format
 yFONT_make (1)  creating a new font file
 yFONT_show (1)  reviewing an existing font file

.SH COLOPHON
this page is part of a documentation package mean to make our use of the
heatherly libraries easier and faster
